{"pageProps":{"source":{"compiledSource":"var h=Object.defineProperty,c=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var p=(n,t,a)=>t in n?h(n,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[t]=a,e=(n,t)=>{for(var a in t||(t={}))r.call(t,a)&&p(n,a,t[a]);if(o)for(var a of o(t))s.call(t,a)&&p(n,a,t[a]);return n},d=(n,t)=>c(n,m(t));var l=(n,t)=>{var a={};for(var i in n)r.call(n,i)&&t.indexOf(i)<0&&(a[i]=n[i]);if(n!=null&&o)for(var i of o(n))t.indexOf(i)<0&&s.call(n,i)&&(a[i]=n[i]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var i=a,{components:n}=i,t=l(i,[\"components\"]);return mdx(MDXLayout,d(e(e({},layoutProps),t),{components:n,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Fabric Concepts\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`## utility classes\n## customised subset of Tailwind classes\n`)),mdx(\"h2\",null,\"Lets make a FINN page\"),mdx(\"p\",null,\"So lets pretend we get a task to create a FINN page, we will use the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.finn.no/min-finn\"}),\"Min FINN\"),\" page as an example.\"),mdx(\"h3\",null,\"Screenshot, minfinn on smaller screen\"),mdx(\"p\",null,mdx(\"a\",e({parentName:\"p\"},{href:\"guide-img/minfinn-small.png\"}),mdx(\"img\",{alt:\"Screenshot of minfinn, mobile\",src:\"guide-img/minfinn-small.png\",height:\"100\",width:\"100\"}))),mdx(\"h3\",null,\"Screenshot, minfinn\"),mdx(\"p\",null,mdx(\"a\",e({parentName:\"p\"},{href:\"guide-img/minfinn-large.png\"}),mdx(\"img\",{alt:\"Screenshot of minfinn\",src:\"guide-img/minfinn-large.png\",height:\"500\",width:\"500\"}))),mdx(\"p\",null,\"As we can see the main layout follows the same pattern as most pages on finn. \"),mdx(\"p\",null,`We will dig a little deeper into the main menu part of it.\n`,mdx(\"img\",e({parentName:\"p\"},{src:\"guide-img/minfinn-menu-full.png\",alt:\"Screenshot of minfinn, the main menu\"}))),mdx(\"h3\",null,\"1. Getting setup\"),mdx(\"p\",null,\"If not already done, there is a compehensive \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.fabric-ds.io/guide-setup\"}),\"setup-guide\"),\" to get up and running. \"),mdx(\"h3\",null,\"2. Header/Footer\"),mdx(\"p\",null,`The top-bar and Footer are standard finn components (excists as podlets) We will ignore these for now.\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.schibsted.io/finn/header\"}),\"FINN Header podlet on github\"),`\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.schibsted.io/finn/footer\"}),\"FINN Footer podlet on github\")),mdx(\"h3\",null,\"3. Page-container\"),mdx(\"p\",null,\"The purpose of this is to keep the page align correctly across the site, making it scale correctly on different window sizes/devices, and also keep it nice and tidy inside the outer banners. \"),mdx(\"p\",null,\"The sketch shows a background going full width outside the page-container, so we need to wrap it inside something that holds the background-color.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-html\"}),`    <div class=\"bg-blue-100\">\n        <div class=\"page-container\"> ... </div>\n    </div>\n`)),mdx(\"h3\",null,\"4. Grid\"),mdx(\"p\",null,\"Thinking mobile first we just need standard \",mdx(\"inlineCode\",{parentName:\"p\"},\"div\"),\" (display:block) behavior to get the 1 col layout we need on smaller devices.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-html\"}),`    <div> ... </div>\n`)),mdx(\"p\",null,\"We add a grid to help us with the layout. The grid can start at the medium (md:) breakpoint and up from there giving us multiple columns only when we need them.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-html\"}),`    <div class=\"md:grid\"> ... </div>\n`)),mdx(\"p\",null,\"Adding 2 columns from medium breakpoint, and 3 columns from large and up.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-html\"}),`<div class=\"md:grid md:grid-cols-2 lg:grid-cols3\"> ... </div>\n`)),mdx(\"h3\",null,\"5. Adding cards\"),mdx(\"p\",null,`React/Vue/Element cards? Maybe choose one and show how its done?\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://react.fabric-ds.io/card\"}),\"Card in React\"),`\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://vue.fabric-ds.io/card\"}),\"Card in Vue\"),`\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://elements.fabric-ds.io/pages/components/card.html\"}),\"Card in Element\")),mdx(\"h3\",null,\"6. Card content\"),mdx(\"h4\",null,\"Screenshot, card content on smaller screens\"),mdx(\"p\",null,mdx(\"img\",e({parentName:\"p\"},{src:\"guide-img/minfinn-menu-item-small.png\",alt:\"Screenshot of minfinn, one item from the main menu, on small device \"}))),mdx(\"h4\",null,\"Screenshot, card content on larger screens\"),mdx(\"p\",null,mdx(\"img\",e({parentName:\"p\"},{src:\"guide-img/minfinn-menu-item-large.png\",alt:\"Screenshot of minfinn, one item from the main menu\"}))),mdx(\"p\",null,\"Looking at the layout for each card we would need a little bit of markup to start with, something like:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-html\"}),`    <div>\n        <div>\n            <svg></svg>\n            <a href=\"#\">Title</a>\n        </div>  \n        <p>text-content</p>\n    </div>\n`)),mdx(\"p\",null,\"Starting with the title, this should prob be the main linked item for the card. \"),mdx(\"p\",null,\"Screen readers do not like it if we wrap a whole card of content like this inside, neither a button or an A tag, the screenreader would treat all the content as one very long sentence with no other structure. \"),mdx(\"p\",null,\"The card component uses a trick where the \",mdx(\"inlineCode\",{parentName:\"p\"},\"A\"),\" element (its required to have either an \",mdx(\"inlineCode\",{parentName:\"p\"},\"A\"),\" element or a \",mdx(\"inlineCode\",{parentName:\"p\"},\"Button\"),\" element to make a card component clickable) interactive area is stretched to the size of the full clickable card, so this is perfect for this use-case: \"),mdx(\"p\",null,\"We vertically center the icon and the title with flex. \"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-html\"}),`    <div>\n        <div class=\"flex items-center\">\n            <svg></svg>\n            <a href=\"#\">Title</a>\n        </div>  \n        <p>text-content</p>\n    </div>\n`)),mdx(\"p\",null,\"Dependent on the final page markup structure we probably want to wrap this title in an appropriate H tag. The H tags should be used in a semantic way, forming a clear tree structure not skipping any levels. The sizes and look of them can be set using the \",mdx(\"inlineCode\",{parentName:\"p\"},\"t1\"),\"-\",mdx(\"inlineCode\",{parentName:\"p\"},\"t5\"),\" class.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-html\"}),`    <div>\n      <div class=\"flex items-center\">\n        <svg></svg>\n        <h3>\n          <a href=\"#\" class=\"ml-16\">Title</a>\n        </h3>\n      </div>\n      <p class=\"pt-8\">text-content</p>\n    </div>\n`)),mdx(\"p\",null,\"The text-content bit is supposed to be hidden on mobile, since the responsive setup in Fabric is mobile first, we need to hide it for smaller devices and then un-hide it for bigger ones. This is easy using classes \",mdx(\"inlineCode\",{parentName:\"p\"},\"hidden\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"md:block\"),\". \"),mdx(\"p\",null,\"One thing to consider is if this hidden content should be available for screen-readers, even when hidden visually.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-html\"}),`    <div>\n        <div class=\"flex items-center\">\n            <svg></svg>\n            <h3>\n                <a href=\"#\" class=\"ml-16\">Min konto</a>\n            </h3>\n        </div>\n        <p class=\"pt-8 mr-8 hidden md:block\">Se dine opplysninger p\\xE5 FINN og Schibstedkonto</p>\n    </div>\n`)),mdx(\"p\",null,\"The friendly UX person is now annoyed because we forgot the arrow to the right on the card, but that is no problem, we just wrap around another flex container.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-html\"}),`    <div class=\"flex items-center\">\n      <div>\n        <div class=\"flex items-center\">\n          <svg></svg>\n          <h3>\n            <a href=\"#\" class=\"ml-16\">Min konto</a>\n          </h3>\n        </div>\n        <p class=\"pt-8 mr-8 hidden md:block\">Se dine opplysninger p\\xE5 FINN og Schibstedkonto</p>\n      </div>\n      <div class=\"ml-auto\">\n        <svg></svg>\n      </div>\n    </div>\n`)),mdx(\"p\",null,mdx(\"a\",e({parentName:\"p\"},{href:\"https://play.tailwindcss.com/IJwdywizdl\"}),\"Card Content example on Tailwind.play\")),mdx(\"h3\",null,\"7. Serving SVG's\"),mdx(\"p\",null,\"Fabric comes with its own \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/fabric-ds/icons\"}),\"Icon library\"),\" \"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}